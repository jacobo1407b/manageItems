import { useState, useEffect } from "react"
import Head from 'next/head'
import { Input, Button, Table, Text, Tooltip, Grid as Gr, Loading } from "@nextui-org/react";
import { Grid } from "semantic-ui-react"
import { AiFillFileExcel, AiOutlinePlusCircle, AiOutlineCloseCircle } from "react-icons/ai";
import { FaSistrix } from "react-icons/fa"
import ModalBasic from '@components/Modal';
import CreateItem from "@components/CreateItem";
import { createApi } from "service/rest";

export default function Home() {
  const [visible, setVisible] = useState(false);
  const [dataClassItem, setDataClassItem] = useState<any>([]);
  const [clientApi, setClientApi] = useState<any>(null)
  const [searchData, setSearchData] = useState({
    lang: "US",
    itm: "",
    desc: ""
  });
  const [loadSearch, setLoadSearch] = useState(false);
  const [dataTable, setDataTable] = useState<Array<iItems>>([])


  useEffect(() => {
    let api: any = createApi("/api");
    setClientApi(api)
  }, [])


  useEffect(() => {
    if (clientApi !== null) {
      (async () => {
        let arrTemp: any = [];

        let f: Array<ClassLov> = await clientApi.getlovs('ESA');
        //console.log(await api.items(null, "AS85022"))
        f.map((x) => {
          return arrTemp.push({
            key: x.PROP,
            text: x.TEXT,
            value: x.CODE
          })
        })
        setDataClassItem(arrTemp)
      })()
    }
  }, [clientApi])


  function handlerChange(e: any) {
    const { name, value } = e.target;
    setSearchData({
      ...searchData,
      [name]: value
    })
  }

  async function searchItems() {
    if (!loadSearch) {
      setLoadSearch(true);
      let result = await clientApi.items(searchData.lang, searchData.itm, searchData.desc);
      setDataTable(result)
      setLoadSearch(false)
    }
  }
  return (
    <>
      <Head>
        <title>Manage Items</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Grid stackable>
        <Grid.Row columns={2}>

          <Grid.Column width={11}>
            <>
              <Grid>
                <Grid.Row>
                  <Grid.Column width={7}>
                    <Input clearable bordered labelPlaceholder="Item" name="itm" size="lg" fullWidth onChange={handlerChange} />
                  </Grid.Column>
                  <Grid.Column width={7}>
                    <Input clearable bordered labelPlaceholder="Keyword" size="lg" fullWidth />
                  </Grid.Column>
                </Grid.Row>
                <Grid.Row>
                  <Grid.Column width={14}>
                    <Input clearable bordered labelPlaceholder="Descripcion" name="desc" size="lg" fullWidth onChange={handlerChange} />
                  </Grid.Column>
                </Grid.Row>
              </Grid>
            </>
          </Grid.Column>
          <Grid.Column width={5}>
            <>
              <Grid>
                <Grid.Row>
                  <Grid.Column width={5}>
                    <Button
                      color="success"
                      auto size="lg"
                      icon={loadSearch ? null : <FaSistrix />}
                      onClick={searchItems}
                    >
                      {loadSearch ? <Loading type="points" color="currentColor" size="sm" /> : "Buscar"}

                    </Button>
                  </Grid.Column>
                  <Grid.Column width={5}>
                    <Button
                      color="error"
                      auto
                      size="lg"
                      icon={<AiOutlineCloseCircle />}
                    >
                      Resetear
                    </Button>
                  </Grid.Column>
                </Grid.Row>
              </Grid>
            </>
          </Grid.Column>
        </Grid.Row>

        <Grid.Row>
          <Gr.Container>
            <Gr>
              <Text h6>Acciones:</Text>
            </Gr>
            <Gr>

              <Tooltip content="Exportar a excel" color="success" placement="right">
                <Button auto light>
                  <AiFillFileExcel color="green" size={20} />
                </Button>
              </Tooltip>
            </Gr>
            <Gr>
              <Tooltip content="Agregar Item" color="primary" placement="right">
                <Button auto light onClick={() => setVisible(true)}>
                  <AiOutlinePlusCircle color="green" size={20} />
                </Button>
              </Tooltip>
            </Gr>
            <Gr>
              <Tooltip content="Eliminar Item" color="error" placement="right">
                <Button auto light>
                  <AiOutlineCloseCircle color="red" size={20} />
                </Button>
              </Tooltip>
            </Gr>
          </Gr.Container>
        </Grid.Row>
        <Grid.Row>
          <Grid.Column width={16}>
            <Table
              aria-label="Example table with custom cells"
              css={{
                height: "auto",
                minWidth: "100%",
              }}
              selectionMode="none"
            >
              <Table.Header>
                <Table.Column
                >
                  Item
                </Table.Column>
                <Table.Column
                >
                  Descripcion
                </Table.Column>
                <Table.Column
                >
                  Organizaci√≥n
                </Table.Column>
                <Table.Column
                >
                  Class
                </Table.Column>
                <Table.Column
                >
                  Unidad de medida
                </Table.Column>
              </Table.Header>
              <Table.Body items={dataTable}>
                {(x) => (
                  <Table.Row key={x.INVENTORY_ITEM_ID}>
                    <Table.Cell>{x.ITEM_NUMBER}</Table.Cell>
                    <Table.Cell>{x.DESCRIPTION}</Table.Cell>
                    <Table.Cell>{x.ORGANIZATION_NAME}</Table.Cell>
                    <Table.Cell>clase buscar</Table.Cell>
                    <Table.Cell>{x.CURRENT_PHASE_CODE}</Table.Cell>
                  </Table.Row>
                )}
              </Table.Body>
            </Table>
          </Grid.Column>
        </Grid.Row>
      </Grid>
      <ModalBasic
        visible={visible}
        closeHandler={setVisible}
        textAcep="Crear"
        title='Crear Item'
        children={<CreateItem data={dataClassItem} />}
      />
    </>
  )
}
